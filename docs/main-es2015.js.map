{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.constant.ts","./src/app/app.module.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { TreeGridComponent, SelectionSettingsModel, Column } from '@syncfusion/ej2-angular-treegrid';\r\nimport { DialogUtility } from '@syncfusion/ej2-popups';\r\nimport { DialogComponent } from '@syncfusion/ej2-angular-popups';\r\nimport { BeforeOpenCloseMenuEventArgs, MenuEventArgs, MenuItemModel } from '@syncfusion/ej2-navigations';\r\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\r\nimport { closest, createElement } from '@syncfusion/ej2-base';\r\n\r\nimport { UserService } from './services/user.service';\r\nimport { AppConst } from './app.constant';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n\r\n  data: any = [];\r\n  columns: any = [];\r\n  selectionOptions: SelectionSettingsModel;\r\n  display: boolean = false;\r\n  colMenuItems: MenuItemModel[];\r\n  rowMenuItems: MenuItemModel[];\r\n  colCheckBoxMenus: string[];\r\n  rowCheckBoxMenus: string[];\r\n  addColumnForm: FormGroup;\r\n  addRowForm: FormGroup;\r\n  rowContextMenuDisplay: boolean = false;\r\n  colContextMenuDisplay: boolean = true;\r\n  colTarget: string = '.e-headercell';\r\n  rowTarget: string = '.e-rowcell';\r\n  selectedColumn: any;\r\n  selectedRow: any;\r\n  selectedRowIndex: number;\r\n  allowFiltering: boolean = false;\r\n  frozenColumns: number = 0;\r\n  sortSettings: any;\r\n  addUpdateLabel: string = \"\";\r\n  targetElement: HTMLElement;\r\n  chooseColumns: any[];\r\n  DialogObj: any;\r\n  selectedRows: any = [];\r\n  pasteMode: string = '';\r\n  selectedMode: string = '';\r\n  deleteMode: string = '';\r\n  DialogAlert: any;\r\n  colTypeSet;\r\n  fieldsvalues = { value: \"value\", text: \"text\" }\r\n  dropDownSet;\r\n  alignmentSet;\r\n\r\n  @ViewChild('treegrid') public treeGridObj: TreeGridComponent;\r\n  @ViewChild('container', { read: ElementRef }) container: ElementRef;\r\n  @ViewChild('ejDialog') ejDialog: DialogComponent;\r\n  @ViewChild('chooseColDialog') chooseColDialog: DialogComponent;\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsers();\r\n    this.selectionOptions = { type: 'Single' };\r\n\r\n    this.colMenuItems = AppConst.colMenuItems;\r\n    this.rowMenuItems = AppConst.rowMenuItems;\r\n\r\n    this.sortSettings = {\r\n      columns: []\r\n    }\r\n\r\n    this.colCheckBoxMenus = AppConst.colCheckBoxMenus;\r\n    this.rowCheckBoxMenus = AppConst.rowCheckBoxMenus;\r\n    this.colTypeSet = AppConst.colTypeSet;\r\n    this.dropDownSet = AppConst.dropDownSet;\r\n    this.alignmentSet = AppConst.alignmentSet;\r\n    this.initForms();\r\n  }\r\n\r\n  initForms() {\r\n    this.addColumnForm = new FormGroup({\r\n      colName: new FormControl('', [Validators.required]),\r\n      colValue: new FormControl('', [Validators.required]),\r\n      colType: new FormControl('', [Validators.required]),\r\n      colMinWidth: new FormControl(''),\r\n      colFontSize: new FormControl(''),\r\n      colFontColor: new FormControl('#000000'),\r\n      colBgColor: new FormControl('#ffffff'),\r\n      colAlignment: new FormControl(''),\r\n      colTextWrap: new FormControl(''),\r\n      isColAdd: new FormControl(true)\r\n    });\r\n    this.addRowForm = new FormGroup({\r\n      name: new FormControl('', [Validators.required]),\r\n      duration: new FormControl('', [Validators.required]),\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  getUsers() {\r\n    this.userService.getUsers().subscribe((response: any) => {\r\n      this.data = response.payload.userData;\r\n      this.columns = response.payload.columns;\r\n      this.display = true;\r\n      setTimeout(() => {\r\n        this.rowContextMenuDisplay = true;\r\n      }, 100);\r\n    }, (err) => {\r\n      console.log('🚀 ~ this.userService.getUsers ~ err', err);\r\n    });\r\n  }\r\n\r\n  // ? Check/Uncheck of column contextmenu items\r\n  public colBeforeClose(args: BeforeOpenCloseMenuEventArgs) {\r\n    if (args.event && (args.event.target as Element).closest('.e-menu-item')) {\r\n      let selectedElem: NodeList = args.element.querySelectorAll('.e-selected');\r\n      for (let i: number = 0; i < selectedElem.length; i++) {\r\n        let ele: Element = selectedElem[i] as Element;\r\n        ele.classList.remove('e-selected');\r\n      }\r\n      let checkbox: HTMLElement = closest(args.event.target as Element, '.e-checkbox-wrapper') as HTMLElement;\r\n      if (checkbox) {\r\n        let frame: HTMLElement = checkbox.querySelector('.e-frame');\r\n        if (checkbox && frame.classList.contains('e-check')) {\r\n          frame.classList.remove('e-check');\r\n        } else if (checkbox) {\r\n          frame.classList.add('e-check');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // ? Check/Uncheck of row contextmenu items\r\n  public rowBeforeClose(args: BeforeOpenCloseMenuEventArgs) {\r\n    if ((args.event.target as Element).closest('.e-menu-item')) {\r\n      let selectedElem: NodeList = args.element.querySelectorAll('.e-selected');\r\n      for (let i: number = 0; i < selectedElem.length; i++) {\r\n        let ele: Element = selectedElem[i] as Element;\r\n        ele.classList.remove('e-selected');\r\n      }\r\n      let checkbox: HTMLElement = closest(args.event.target as Element, '.e-checkbox-wrapper') as HTMLElement;\r\n      if (checkbox) {\r\n        let frame: HTMLElement = checkbox.querySelector('.e-frame');\r\n        if (checkbox && frame.classList.contains('e-check')) {\r\n          frame.classList.remove('e-check');\r\n        } else if (checkbox) {\r\n          frame.classList.add('e-check');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // ? Add checkbox to column contextmenu items\r\n  public colItemRender(args: MenuEventArgs) {\r\n    if (this.colCheckBoxMenus.includes(args.item.id)) {\r\n      let check: Element;\r\n      if (args.item.id === 'freeze') {\r\n        check = createCheckBox(createElement, false, {\r\n          label: args.item.text,\r\n          checked: this.frozenColumns > 0 ? true : false\r\n        });\r\n      } else {\r\n        check = createCheckBox(createElement, false, {\r\n          label: args.item.text,\r\n          checked: false\r\n        });\r\n      }\r\n      args.element.innerHTML = '';\r\n      args.element.appendChild(check);\r\n    }\r\n  }\r\n\r\n  // ? Add checkbox to row contextmenu items\r\n  public rowItemRender(args: MenuEventArgs) {\r\n    if (this.rowCheckBoxMenus.includes(args.item.id)) {\r\n      let check: Element = createCheckBox(createElement, false, {\r\n        label: args.item.text,\r\n        checked: this.selectionOptions.type == 'Multiple' ? true : false\r\n      });\r\n      args.element.innerHTML = '';\r\n      args.element.appendChild(check);\r\n    }\r\n  }\r\n\r\n  // ? On column context menu open\r\n  onColContextMenuBeforeOpen(event) {\r\n    let path: HTMLElement[] = event.event.path;\r\n    path.forEach((element) => {\r\n      if (element.classList && element.classList.contains('e-headercell')) {\r\n        const headerCell: HTMLElement = element.querySelector('span.e-headertext');\r\n        const columnName: string = headerCell.innerText;\r\n        this.selectedColumn = this.columns.find(col => col.headerText === columnName);\r\n      }\r\n    })\r\n    let menuItems: HTMLElement = event.element;\r\n    let multiSortItem = menuItems.querySelector('li#multiSort')\r\n    let filterItem = menuItems.querySelector('li#filter')\r\n    let multiSortCheckBox = multiSortItem.querySelector('.e-frame');\r\n    let filterCheckBox = filterItem.querySelector('.e-frame');\r\n    let index = this.sortSettings.columns.findIndex((col) => {\r\n      return col.field === this.selectedColumn.field;\r\n    });\r\n    if (this.treeGridObj.allowFiltering) {\r\n      filterCheckBox.classList.add('e-check');\r\n    } else {\r\n      filterCheckBox.classList.remove('e-check');\r\n    }\r\n    if (index > -1) {\r\n      multiSortCheckBox.classList.add('e-check');\r\n    } else {\r\n      multiSortCheckBox.classList.remove('e-check');\r\n    }\r\n  }\r\n\r\n  // ? On row context menu open\r\n  onRowContextMenuBeforeOpen(event) {\r\n    let path: HTMLElement[] = event.event.path;\r\n    path.forEach((element) => {\r\n      if (element.classList && element.classList.contains('e-row')) {\r\n        const cells: any = element.children;\r\n        const rowId: string = cells[0].innerText;\r\n        this.selectedRow = this.data.find(row => row.id === rowId);\r\n        this.selectedRowIndex = this.data.map(function (e) { return e.id }).indexOf(rowId);\r\n      }\r\n    })\r\n  }\r\n\r\n  // ? On column context menu item click\r\n  public colItemSelect(args: MenuEventArgs): void {\r\n    switch (args.item.id) {\r\n      case 'filter':\r\n        this.changeFilter();\r\n        break;\r\n      case 'freeze':\r\n        this.freezeColumns(args);\r\n        break;\r\n      case 'multiSort':\r\n        this.multiSort(args);\r\n        break;\r\n      case 'addCol':\r\n        this.addColumn(true);\r\n        break;\r\n      case 'editCol':\r\n        this.addColumn(false);\r\n        break;\r\n      case 'deleteCol':\r\n        this.deleteColumn();\r\n        break;\r\n      case 'choose':\r\n        this.openChooseColDialog();\r\n        break;\r\n    }\r\n  }\r\n\r\n  // ? On row context menu item click\r\n  public rowItemSelect(args: MenuEventArgs): void {\r\n    switch (args.item.id) {\r\n      case 'multiSelect':\r\n        this.changeRowSelectionOption();\r\n        break;\r\n      case 'addNextRow':\r\n        this.addNextRow(args);\r\n        break;\r\n      case 'copyRow':\r\n        this.copyRow(args);\r\n        break;\r\n      case 'cutRow':\r\n        this.cutRow(args);\r\n        break;\r\n      case 'pasteNext':\r\n        this.pasteMode = 'Next';\r\n        this.paste(args);\r\n        break;\r\n      case 'pasteChild':\r\n        this.pasteMode = 'Child';\r\n        this.paste(args);\r\n        break;\r\n      case 'deleteRow':\r\n        this.deleteRow(args);\r\n        break;\r\n    }\r\n  }\r\n\r\n  changeFilter() {\r\n    this.hideContextMenus();\r\n    this.treeGridObj.allowFiltering = !this.treeGridObj.allowFiltering;\r\n    this.refreshTreeGrid();\r\n  }\r\n\r\n  freezeColumns(args: MenuEventArgs) {\r\n    this.display = false;\r\n    this.hideContextMenus();\r\n    let checkboxEle = args.element.querySelector('span.e-frame.e-icons');\r\n    if (checkboxEle.classList.contains('e-check')) {\r\n      this.frozenColumns = 0;\r\n    } else {\r\n      const colIndex = this.columns.map(i => i.field).indexOf(this.selectedColumn.field);\r\n      this.frozenColumns = colIndex + 1;\r\n    }\r\n    this.hardRefreshTreeGrid();\r\n  }\r\n\r\n  multiSort(args: MenuEventArgs) {\r\n    this.hideContextMenus();\r\n    this.display = false;\r\n    let checkboxEle = args.element.querySelector('span.e-frame.e-icons');\r\n    if (checkboxEle.classList.contains('e-check')) {\r\n      this.treeGridObj.removeSortColumn(this.selectedColumn.field);\r\n      this.sortSettings.columns = this.sortSettings.columns.filter((col) => col.field != this.selectedColumn.field);\r\n    } else {\r\n      this.treeGridObj.sortByColumn(this.selectedColumn.field, 'Ascending', true);\r\n      this.sortSettings.columns.push({ direction: 'Ascending', field: this.selectedColumn.field });\r\n    }\r\n    this.hardRefreshTreeGrid();\r\n  }\r\n\r\n  addColumn(isAdd: boolean) {\r\n    this.hideContextMenus();\r\n    this.DialogAlert?.hide();\r\n    this.addUpdateLabel = isAdd ? \"Add New Column\" : \"Edit New Column\";\r\n    if (!isAdd) {\r\n      this.addColumnForm.patchValue({\r\n        colName: this.selectedColumn.headerText,\r\n        colValue: '',\r\n        colType: this.selectedColumn.type,\r\n        isColAdd: isAdd\r\n      });\r\n    }\r\n    else {\r\n      this.addColumnForm.reset();\r\n      this.addColumnForm.patchValue({\r\n        colType: 'string',\r\n        isColAdd: isAdd\r\n      });\r\n    }\r\n    this.ejDialog.show();\r\n  }\r\n\r\n\r\n  saveCol() {\r\n    const isAdd = this.addColumnForm.get('isColAdd').value;\r\n    const colName = this.addColumnForm.get('colName').value;\r\n    const noSpaceColName = colName.replace(/ /g, \"\");\r\n    const colType = this.addColumnForm.get('colType').value;\r\n    const colVal = this.addColumnForm.get('colValue').value;\r\n    const minWidth = this.addColumnForm.get('colMinWidth').value;\r\n    const fontSize = this.addColumnForm.get('colFontSize').value;\r\n    const fontColor = this.addColumnForm.get('colFontColor').value;\r\n    const bgColor = this.addColumnForm.get('colBgColor').value;\r\n    const alignMent = this.addColumnForm.get('colAlignment').value;\r\n    const textWrap = this.addColumnForm.get('colTextWrap').value;\r\n    var style = document.createElement('style');\r\n    style.innerHTML = `.${noSpaceColName}css { color: ${fontColor} !important; font-size: ${fontSize}px !important; background-color: ${bgColor} !important; min-width: ${minWidth}px !important; text-align: ${alignMent} !important; }`;\r\n    document.getElementsByTagName('head')[0].appendChild(style);\r\n\r\n    if (isAdd) {\r\n      if (!this.columns.some(x => x.field.toLowerCase() == noSpaceColName.toLowerCase())) {\r\n        let newCol = { field: noSpaceColName, headerText: colName, headerTextAlign: alignMent, type: colType, customAttributes: { class: `${noSpaceColName}css` } };\r\n        let colObj: Column = new Column(newCol);\r\n        this.columns.push(colObj);\r\n        console.log(\"🚀  ~ saveCol ~ this.columns\", this.columns)\r\n        this.data.forEach(x => {\r\n          x[noSpaceColName] = colVal;\r\n        });\r\n      }\r\n      else {\r\n        this.DialogAlert = DialogUtility.alert({\r\n          content: \"This column name is already exists. Please try again with different column name!\",\r\n          okButton: { text: 'OK', click: this.addColumn.bind(this, true) },\r\n          animationSettings: { effect: 'Zoom' }\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      let newCol = { field: this.selectedColumn.field, headerText: colName, headerTextAlign: alignMent, type: colType, customAttributes: { class: `${noSpaceColName}css` } };\r\n      this.columns[this.selectedColumn.index] = new Column(newCol);\r\n      if (!!colVal) {\r\n        this.data.forEach(x => {\r\n          if (x.hasOwnProperty(this.selectedColumn.field)) {\r\n            x[this.selectedColumn.field] = colVal;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.cancelCol();\r\n    this.addColumnForm.reset();\r\n  }\r\n\r\n  cancelCol() {\r\n    this.ejDialog.hide();\r\n    this.refreshTreeGrid();\r\n  }\r\n\r\n  deleteColumn() {\r\n    const index = this.treeGridObj.columns.findIndex(x => x.field == this.selectedColumn.field);\r\n    this.deleteMode = 'Column';\r\n    this.onOpenDialog(index);\r\n  }\r\n\r\n  onOpenDialog(index: any): void {\r\n    this.hideContextMenus();\r\n    let title: string = 'Delete Column';\r\n    let content: string = 'Are you sure you want to delete this column?';\r\n    if (this.deleteMode == 'Row') {\r\n      title = 'Delete Row';\r\n      content = 'Are you sure you want to delete this row?';\r\n    }\r\n    this.DialogObj = DialogUtility.confirm({\r\n      title: title,\r\n      content: content,\r\n      isModal: true,\r\n      okButton: { text: 'OK', click: this.okClick.bind(this, index) },\r\n      cancelButton: { text: 'Cancel', click: this.cancelClick.bind(this) },\r\n      animationSettings: { effect: 'Zoom' },\r\n      position: { X: 'center', Y: 'center' }\r\n    });\r\n  }\r\n\r\n  okClick(index: any): void {\r\n    if (this.deleteMode == 'Column') {\r\n      if (index > -1) {\r\n        this.treeGridObj.columns.splice(index, 1);\r\n        this.treeGridObj.refreshColumns();\r\n      }\r\n    }\r\n    if (this.deleteMode == 'Row') {\r\n      this.data.splice(this.selectedRowIndex, 1);\r\n      this.treeGridObj.refresh();\r\n    }\r\n    this.refreshTreeGrid();\r\n    this.cancelClick();\r\n  }\r\n\r\n  cancelClick(): void {\r\n    this.DialogObj.close();\r\n  }\r\n\r\n  openChooseColDialog() {\r\n    this.hideContextMenus();\r\n    this.chooseColumns = this.columns;\r\n    this.chooseColDialog.show();\r\n  }\r\n\r\n  chooseCol() {\r\n    this.hideContextMenus();\r\n    this.chooseColumns.forEach((col, index) => {\r\n      this.columns[index].visible = col.visible;\r\n    });\r\n    this.treeGridObj.refreshColumns();\r\n    this.cancelChooseCol();\r\n  }\r\n\r\n  changeChooseCol(event, column) {\r\n    this.chooseColumns.forEach(col => {\r\n      if (col.field == column.field) {\r\n        col.visible = event.target.checked;\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelChooseCol() {\r\n    this.chooseColumns = [];\r\n    this.chooseColDialog.hide();\r\n    this.refreshTreeGrid();\r\n  }\r\n\r\n  changeRowSelectionOption() {\r\n    this.display = false;\r\n    this.hideContextMenus();\r\n    this.selectionOptions.type = this.selectionOptions.type == 'Multiple' ? 'Single' : 'Multiple';\r\n    this.hardRefreshTreeGrid();\r\n  }\r\n\r\n  addNextRow(args: MenuEventArgs) {\r\n    console.log('🚀 ~ addNext ~ args', args);\r\n  }\r\n\r\n  copyRow(args: MenuEventArgs) {\r\n    this.selectedMode = 'Copy';\r\n    let selectedRows: any = this.treeGridObj.getSelectedRecords();\r\n    let selectedRowsIds: any = selectedRows.map(row => row.id);\r\n    this.selectedRows = selectedRowsIds.map(row => {\r\n      let index = this.data.map(function (e) { return e.id }).indexOf(row);\r\n      let newRow = { ...this.data[index] };\r\n      newRow.id = this.userService.getUniqueId(4);\r\n      return newRow;\r\n    });\r\n  }\r\n\r\n  cutRow(args: MenuEventArgs) {\r\n    this.selectedMode = 'Cut';\r\n    let selectedRows: any = this.treeGridObj.getSelectedRecords();\r\n    let selectedRowsIds: any = selectedRows.map(row => row.id);\r\n    this.selectedRows = selectedRowsIds.map(row => {\r\n      let index = this.data.map(function (e) { return e.id }).indexOf(row);\r\n      let newRow = { ...this.data[index] };\r\n      return newRow;\r\n    });\r\n  }\r\n\r\n  paste(args: MenuEventArgs) {\r\n    switch (this.pasteMode) {\r\n      case 'Child':\r\n        this.pasteChild();\r\n        break;\r\n      case 'Next':\r\n        this.pasteNext();\r\n        break;\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  pasteChild() {\r\n    if (this.selectedRows.length == 0) {\r\n      return;\r\n    }\r\n    this.hideContextMenus();\r\n    if (!this.data[this.selectedRowIndex].subUsers) {\r\n      this.data[this.selectedRowIndex].subUsers = [];\r\n    }\r\n    this.data[this.selectedRowIndex].subUsers.push(...this.selectedRows);\r\n    if (this.selectedMode == 'Cut') {\r\n      this.selectedRows.forEach(row => {\r\n        this.data = this.data.filter(item => item.id != row.id);\r\n      });\r\n    }\r\n    this.selectedRows = [];\r\n    this.refreshTreeGrid();\r\n  }\r\n\r\n  pasteNext() {\r\n    if (this.selectedRows.length == 0) {\r\n      return;\r\n    }\r\n    this.hideContextMenus();\r\n    let selectedRowsIndexes = [];\r\n    if (this.selectedMode == 'Cut') {\r\n      this.selectedRows.forEach(row => {\r\n        let index = this.data.findIndex(x => x.id == row.id);\r\n        selectedRowsIndexes.push(index);\r\n      });\r\n      selectedRowsIndexes.forEach(index => {\r\n        if (index < this.selectedRowIndex) {\r\n          this.selectedRowIndex--;\r\n        }\r\n      })\r\n      this.selectedRows.forEach((row, index) => {\r\n        this.data = this.data.filter(item => item.id != row.id);\r\n      });\r\n    }\r\n    this.data.splice(this.selectedRowIndex + 1, 0, ...this.selectedRows);\r\n    this.selectedRows = [];\r\n    this.refreshTreeGrid();\r\n  }\r\n\r\n  deleteRow(args: MenuEventArgs) {\r\n    this.deleteMode = 'Row';\r\n    this.onOpenDialog(null);\r\n  }\r\n\r\n  actionHandler(args: any) {\r\n    if (args.name === 'actionComplete' && args.requestType === 'sorting') {\r\n      this.display = false;\r\n      this.hideContextMenus();\r\n      let sortedColumns = this.treeGridObj.sortSettings.columns;\r\n      this.sortSettings.columns = [];\r\n      sortedColumns.forEach(col => {\r\n        this.sortSettings.columns.push({ field: col.field, direction: col.direction });\r\n      });\r\n      this.hardRefreshTreeGrid();\r\n    }\r\n  }\r\n\r\n  hideContextMenus() {\r\n    this.rowContextMenuDisplay = false;\r\n    this.colContextMenuDisplay = false;\r\n  }\r\n\r\n  refreshTreeGrid() {\r\n    this.treeGridObj.refreshColumns();\r\n    this.treeGridObj.refresh();\r\n    setTimeout(() => {\r\n      this.rowContextMenuDisplay = true;\r\n      this.colContextMenuDisplay = true;\r\n    }, 200);\r\n  }\r\n\r\n  hardRefreshTreeGrid() {\r\n    setTimeout(() => {\r\n      this.display = true;\r\n    }, 100);\r\n    setTimeout(() => {\r\n      this.rowContextMenuDisplay = true;\r\n      this.colContextMenuDisplay = true;\r\n    }, 200);\r\n  }\r\n}\r\n","<header class=\"header text-center\">\r\n  <h2>Syncfusion EJ2 Angular TreeGrid</h2>\r\n</header>\r\n\r\n<ejs-treegrid *ngIf=\"display\" #treegrid [dataSource]='data' height='100%' [treeColumnIndex]='1' childMapping='subUsers'\r\n  [columns]='columns' [selectionSettings]='selectionOptions' [allowResizing]='true' [allowFiltering]='allowFiltering'\r\n  [frozenColumns]='frozenColumns' [allowSorting]='true' [sortSettings]='sortSettings' [enableInfiniteScrolling]=true\r\n  (actionComplete)='actionHandler($event)'>\r\n</ejs-treegrid>\r\n\r\n<ejs-contextmenu *ngIf=\"display && colContextMenuDisplay\" id='colContextmenu' #colContextmenu [target]='colTarget'\r\n  [items]='colMenuItems' (beforeItemRender)='colItemRender($event)' (beforeClose)='colBeforeClose($event)'\r\n  (select)=\"colItemSelect($event)\" (beforeOpen)='onColContextMenuBeforeOpen($event)'>\r\n</ejs-contextmenu>\r\n\r\n<ejs-contextmenu *ngIf=\"rowContextMenuDisplay && display\" id='rowContextmenu' #rowContextmenu [target]='rowTarget'\r\n  [items]='rowMenuItems' (beforeItemRender)='rowItemRender($event)' (beforeClose)='rowBeforeClose($event)'\r\n  (select)=\"rowItemSelect($event)\" (beforeOpen)='onRowContextMenuBeforeOpen($event)'>\r\n</ejs-contextmenu>\r\n\r\n<ejs-dialog id='dialog' #ejDialog [header]='addUpdateLabel' [visible]='false'>\r\n  <ng-template #content>\r\n    <form [formGroup]=\"addColumnForm\" (ngSubmit)=\"saveCol()\">\r\n      <input type=\"hidden\" formControlName=\"isColAdd\" />\r\n      <div>\r\n        <div class=\"e-float-input e-control-wrapper\">\r\n          <input formControlName=\"colName\" type=\"text\">\r\n          <span class=\"e-float-line\"></span>\r\n          <label class=\"e-float-text e-label-top\" for=\"ColName\"> Column Name</label>\r\n        </div>\r\n        <span class=\"text-danger\"\r\n          *ngIf=\"addColumnForm?.get('colName')?.hasError('required') && addColumnForm?.get('colName')?.touched\"\r\n          class=\"text-danger\">\r\n          *Column name is required\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <div class=\"e-float-input e-control-wrapper\">\r\n          <ejs-dropdownlist formControlName=\"colType\" [dataSource]='colTypeSet' [fields]=\"fieldsvalues\"\r\n            placeholder=\"Select Column Type\" floatLabelType='Auto'></ejs-dropdownlist>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div\r\n          *ngIf=\"addColumnForm?.get('colType')?.value == 'string' || addColumnForm?.get('colType')?.value == 'number'\"\r\n          class=\"mt-10\">\r\n          <div class=\"e-float-input e-control-wrapper\">\r\n            <input formControlName=\"colValue\"\r\n              [attr.type]=\"addColumnForm?.get('colType')?.value == 'string' ?  'text':'number'\">\r\n            <span class=\"e-float-line\"></span>\r\n            <label class=\"e-float-text e-label-top\" for=\"ColValue\"> Enter {{addColumnForm?.get('colType')?.value ==\r\n              'string'\r\n              ? 'Text' : 'Number'}}</label>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"addColumnForm?.get('colType')?.value == 'Date'\" class=\"mt-10\">\r\n          <ejs-datepicker #ejDatePicker formControlName=\"colValue\" name=\"datepicker\" placeholder=\"Select Date\"\r\n            floatLabelType='Auto'></ejs-datepicker>\r\n        </div>\r\n        <div *ngIf=\"addColumnForm?.get('colType')?.value == 'boolean'\" class=\"mt-10\">\r\n          <ul formControlName=\"colValue\">\r\n            <li>\r\n              <ejs-radiobutton label=\"True\" name=\"bool\" type=\"checkbox\"></ejs-radiobutton>\r\n            </li>\r\n            <li class=\"mt-10\">\r\n              <ejs-radiobutton label=\"False\" type=\"checkbox\" name=\"bool\"></ejs-radiobutton>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div *ngIf=\"addColumnForm?.get('colType')?.value == 'object'\" class=\"mt-10\">\r\n          <ejs-dropdownlist formControlName=\"colValue\" [dataSource]='dropDownSet' placeholder=\"Select Default Value\"\r\n            floatLabelType='Auto' showClearButton='true'></ejs-dropdownlist>\r\n        </div>\r\n        <span class=\"text-danger\"\r\n          *ngIf=\"addColumnForm?.get('colValue')?.hasError('required') && addColumnForm?.get('colValue')?.touched\"\r\n          class=\"text-danger\">\r\n          *Column default value is required\r\n        </span>\r\n      </div>\r\n      <div class=\"mt-10\">\r\n        <div class=\"custom-card mt-15\">\r\n          <p class=\"pb-1 h6 border-bottom\">Column Configurations</p>\r\n\r\n          <div class=\"pl-2\">\r\n            <div class=\"form-row\">\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12 e-float-input e-control-wrapper\">\r\n                <input type=\"number\" formControlName=\"colMinWidth\" />\r\n                <span class=\"e-float-line\"></span>\r\n                <label class=\"e-float-text e-label-top\" for=\"ColMinWidth\"> Minimum Column Width</label>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12 e-float-input e-control-wrapper\">\r\n                <input type=\"number\" formControlName=\"colFontSize\" />\r\n                <span class=\"e-float-line\"></span>\r\n                <label class=\"e-float-text e-label-top\" for=\"ColFontSize\"> Font Size</label>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12\">\r\n                <ejs-dropdownlist formControlName=\"colAlignment\" [dataSource]='alignmentSet'\r\n                  placeholder=\"Select Alignment\" floatLabelType='Auto' showClearButton='true'></ejs-dropdownlist>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12 mt-3\">\r\n                <ejs-checkbox label=\"Text Wrap\"></ejs-checkbox>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12 mt-3\">\r\n                <input type=\"color\" formControlName=\"colFontColor\" />\r\n                <label class=\"ml-1\" for=\"ColFontColor\"> Font Color</label>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12 mt-3\">\r\n                <input type=\"color\" formControlName=\"colBgColor\" />\r\n                <label class=\"ml-1\" for=\"ColFontColor\"> Background Color</label>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-15\">\r\n        <button type=\"submit\" ejs-button cssClass=\"e-info\" [disabled]='addColumnForm.invalid'>Save</button>\r\n        <button type=\"button\" ejs-button cssClass=\"e-danger\" (click)=\"cancelCol()\" class=\"ml-2\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </ng-template>\r\n</ejs-dialog>\r\n\r\n<ejs-dialog id='dialog2' #chooseColDialog header='Choose Column' [visible]='false'>\r\n  <ng-template #content>\r\n    <form (ngSubmit)=\"chooseCol()\">\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-md-3\" *ngFor=\"let col of columns\">\r\n          <div class=\"e-float-input e-control-wrapper\">\r\n            <input type=\"checkbox\" [id]=\"col.field\" [checked]=\"col.visible == true\"\r\n              (change)=\"changeChooseCol($event, col)\">\r\n            <label class=\"e-float-text e-label-top\" [for]=\"col.field\">{{ col.headerText }}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"margin-top\">\r\n        <button type=\"submit\" ejs-button cssClass=\"e-info\">Save</button>\r\n        <button type=\"button\" ejs-button cssClass=\"e-danger\" (click)=\"cancelChooseCol()\"\r\n          class=\"margin-left\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </ng-template>\r\n</ejs-dialog>","export class AppConst {\r\n    public static colMenuItems = [\r\n        { text: 'Add Column', id: 'addCol' },\r\n        { text: 'Edit Column', id: 'editCol' },\r\n        { text: 'Delete Column', id: 'deleteCol' },\r\n        { text: 'Choose', id: 'choose' },\r\n        { text: 'Freeze', id: 'freeze' },\r\n        { text: 'Filter', id: 'filter' },\r\n        { text: 'Multi Sort', id: 'multiSort' },\r\n    ];\r\n\r\n    public static rowMenuItems = [\r\n        { text: 'Add Next', id: 'addNextRow' },\r\n        { text: 'Add Child', id: 'addChildRow' },\r\n        { text: 'Delete Row', id: 'deleteRow' },\r\n        { text: 'Edit Row', id: 'editRow' },\r\n        { text: 'Copy Row', id: 'copyRow' },\r\n        { text: 'Cut Row', id: 'cutRow' },\r\n        { text: 'Paste Next', id: 'pasteNext' },\r\n        { text: 'Paste Child', id: 'pasteChild' },\r\n        { text: 'Multi Select', id: 'multiSelect' },\r\n    ];\r\n\r\n    public static colCheckBoxMenus = ['freeze', 'filter', 'multiSort'];\r\n\r\n    public static rowCheckBoxMenus = ['multiSelect'];\r\n\r\n    public static colTypeSet: { [key: string]: Object }[] = [\r\n        { value: 'string', text: 'Text' },\r\n        { value: 'number', text: 'Num' },\r\n        { value: 'Date', text: 'Date' },\r\n        { value: 'boolean', text: 'Boolean' },\r\n        { value: 'object', text: 'DropDownList' },\r\n    ];\r\n\r\n    public static dropDownSet: string[] = ['Default-1', 'Default-2', 'Default-3', 'Default-4', 'Default-5'];\r\n    public static alignmentSet: string[] = ['Left', 'Center', 'Right', 'Justify'];\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n// import { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { TreeGridModule } from '@syncfusion/ej2-angular-treegrid';\r\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { PageService, FilterService, EditService, ToolbarService, FreezeService } from '@syncfusion/ej2-angular-treegrid';\r\nimport { SortService, ResizeService, ExcelExportService, PdfExportService, ContextMenuService, InfiniteScrollService } from '@syncfusion/ej2-angular-treegrid';\r\nimport { DialogModule } from '@syncfusion/ej2-angular-popups';\r\nimport { ContextMenuModule } from '@syncfusion/ej2-angular-navigations';\r\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\nimport { UserService } from './services/user.service';\r\nimport { DatePickerModule } from '@syncfusion/ej2-angular-calendars';\r\nimport { RadioButtonModule, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    // HttpModule,\r\n    HttpClientModule,\r\n    TreeGridModule,\r\n    DropDownListAllModule,\r\n    DialogModule,\r\n    ContextMenuModule,\r\n    ButtonModule,\r\n    DatePickerModule,\r\n    RadioButtonModule,\r\n    CheckBoxModule,\r\n    NgbModule\r\n  ],\r\n  providers: [PageService,\r\n    SortService,\r\n    FilterService,\r\n    EditService,\r\n    SortService, ResizeService,\r\n    ExcelExportService,\r\n    PdfExportService, ContextMenuService,\r\n    ToolbarService,\r\n    FreezeService,\r\n    InfiniteScrollService],\r\n  bootstrap: [AppComponent, UserService]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  public url = environment.API_URL;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsers(): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        'Content-Type': 'application/json',\r\n        \"Access-Control-Allow-Credentials\": \"true\",\r\n      })\r\n    };\r\n    const url = `${this.url}/users`;\r\n    return this.http.get(url, httpOptions)\r\n  }\r\n\r\n  public getUniqueId(parts: number): string {\r\n    const stringArr = [];\r\n    for (let i = 0; i < parts; i++) {\r\n      const uniqueId = (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n      stringArr.push(uniqueId);\r\n    }\r\n    return stringArr.join('-');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API_URL: \"https://treegrid-node-api.herokuapp.com\",\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}