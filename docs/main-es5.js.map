{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.constant.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","fb","userService","data","columns","display","rowContextMenuDisplay","colContextMenuDisplay","colTarget","rowTarget","allowFiltering","frozenColumns","addUpdateLabel","selectedRows","pasteMode","selectedMode","deleteMode","fieldsvalues","value","text","getUsers","selectionOptions","type","colMenuItems","rowMenuItems","sortSettings","colCheckBoxMenus","rowCheckBoxMenus","colTypeSet","dropDownSet","alignmentSet","initForms","addColumnForm","colName","required","colValue","colType","colMinWidth","colFontSize","colFontColor","colBgColor","colAlignment","colTextWrap","isColAdd","addRowForm","name","duration","subscribe","response","payload","userData","setTimeout","err","console","log","args","event","target","closest","selectedElem","element","querySelectorAll","i","length","ele","classList","remove","checkbox","frame","querySelector","contains","add","includes","item","check","label","checked","innerHTML","appendChild","path","forEach","headerCell","columnName","innerText","selectedColumn","find","col","headerText","menuItems","multiSortItem","filterItem","multiSortCheckBox","filterCheckBox","index","findIndex","field","treeGridObj","cells","children","rowId","selectedRow","row","selectedRowIndex","map","indexOf","changeFilter","freezeColumns","multiSort","addColumn","deleteColumn","openChooseColDialog","changeRowSelectionOption","addNextRow","copyRow","cutRow","paste","deleteRow","hideContextMenus","refreshTreeGrid","checkboxEle","colIndex","hardRefreshTreeGrid","removeSortColumn","filter","sortByColumn","push","direction","isAdd","DialogAlert","hide","patchValue","reset","ejDialog","show","get","noSpaceColName","replace","colVal","minWidth","fontSize","fontColor","bgColor","alignMent","textWrap","style","document","createElement","getElementsByTagName","some","x","toLowerCase","newCol","headerTextAlign","customAttributes","colObj","alert","content","okButton","click","bind","animationSettings","effect","hasOwnProperty","cancelCol","onOpenDialog","title","DialogObj","confirm","isModal","okClick","cancelButton","cancelClick","position","X","Y","splice","refreshColumns","refresh","close","chooseColumns","chooseColDialog","visible","cancelChooseCol","column","getSelectedRecords","selectedRowsIds","newRow","getUniqueId","pasteChild","pasteNext","subUsers","selectedRowsIndexes","requestType","sortedColumns","selector","templateUrl","styleUrls","read","AppConst","AppModule","declarations","providers","bootstrap","UserService","http","url","API_URL","httpOptions","headers","parts","stringArr","uniqueId","Math","random","toString","substring","join","providedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { TreeGridComponent, SelectionSettingsModel, Column } from '@syncfusion/ej2-angular-treegrid';\r\nimport { DialogUtility } from '@syncfusion/ej2-popups';\r\nimport { DialogComponent } from '@syncfusion/ej2-angular-popups';\r\nimport { BeforeOpenCloseMenuEventArgs, MenuEventArgs, MenuItemModel } from '@syncfusion/ej2-navigations';\r\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\r\nimport { closest, createElement } from '@syncfusion/ej2-base';\r\n\r\nimport { UserService } from './services/user.service';\r\nimport { AppConst } from './app.constant';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n\r\n  data: any = [];\r\n  columns: any = [];\r\n  selectionOptions: SelectionSettingsModel;\r\n  display: boolean = false;\r\n  colMenuItems: MenuItemModel[];\r\n  rowMenuItems: MenuItemModel[];\r\n  colCheckBoxMenus: string[];\r\n  rowCheckBoxMenus: string[];\r\n  addColumnForm: FormGroup;\r\n  addRowForm: FormGroup;\r\n  rowContextMenuDisplay: boolean = false;\r\n  colContextMenuDisplay: boolean = true;\r\n  colTarget: string = '.e-headercell';\r\n  rowTarget: string = '.e-rowcell';\r\n  selectedColumn: any;\r\n  selectedRow: any;\r\n  selectedRowIndex: number;\r\n  allowFiltering: boolean = false;\r\n  frozenColumns: number = 0;\r\n  sortSettings: any;\r\n  addUpdateLabel: string = \"\";\r\n  targetElement: HTMLElement;\r\n  chooseColumns: any[];\r\n  DialogObj: any;\r\n  selectedRows: any = [];\r\n  pasteMode: string = '';\r\n  selectedMode: string = '';\r\n  deleteMode: string = '';\r\n  DialogAlert: any;\r\n  colTypeSet;\r\n  fieldsvalues = { value: \"value\", text: \"text\" }\r\n  dropDownSet;\r\n  alignmentSet;\r\n\r\n  @ViewChild('treegrid') public treeGridObj: TreeGridComponent;\r\n  @ViewChild('container', { read: ElementRef }) container: ElementRef;\r\n  @ViewChild('ejDialog') ejDialog: DialogComponent;\r\n  @ViewChild('chooseColDialog') chooseColDialog: DialogComponent;\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsers();\r\n    this.selectionOptions = { type: 'Single' };\r\n\r\n    this.colMenuItems = AppConst.colMenuItems;\r\n    this.rowMenuItems = AppConst.rowMenuItems;\r\n\r\n    this.sortSettings = {\r\n      columns: []\r\n    }\r\n\r\n    this.colCheckBoxMenus = AppConst.colCheckBoxMenus;\r\n    this.rowCheckBoxMenus = AppConst.rowCheckBoxMenus;\r\n    this.colTypeSet = AppConst.colTypeSet;\r\n    this.dropDownSet = AppConst.dropDownSet;\r\n    this.alignmentSet = AppConst.alignmentSet;\r\n    this.initForms();\r\n  }\r\n\r\n  initForms() {\r\n    this.addColumnForm = new FormGroup({\r\n      colName: new FormControl('', [Validators.required]),\r\n      colValue: new FormControl('', [Validators.required]),\r\n      colType: new FormControl('', [Validators.required]),\r\n      colMinWidth: new FormControl(''),\r\n      colFontSize: new FormControl(''),\r\n      colFontColor: new FormControl('#000000'),\r\n      colBgColor: new FormControl('#ffffff'),\r\n      colAlignment: new FormControl(''),\r\n      colTextWrap: new FormControl(''),\r\n      isColAdd: new FormControl(true)\r\n    });\r\n    this.addRowForm = new FormGroup({\r\n      name: new FormControl('', [Validators.required]),\r\n      duration: new FormControl('', [Validators.required]),\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  getUsers() {\r\n    this.userService.getUsers().subscribe((response: any) => {\r\n      this.data = response.payload.userData;\r\n      this.columns = response.payload.columns;\r\n      this.display = true;\r\n      setTimeout(() => {\r\n        this.rowContextMenuDisplay = true;\r\n      }, 100);\r\n    }, (err) => {\r\n      console.log('🚀 ~ this.userService.getUsers ~ err', err);\r\n    });\r\n  }\r\n\r\n  // ? Check/Uncheck of column contextmenu items\r\n  public colBeforeClose(args: BeforeOpenCloseMenuEventArgs) {\r\n    if (args.event && (args.event.target as Element).closest('.e-menu-item')) {\r\n      let selectedElem: NodeList = args.element.querySelectorAll('.e-selected');\r\n      for (let i: number = 0; i < selectedElem.length; i++) {\r\n        let ele: Element = selectedElem[i] as Element;\r\n        ele.classList.remove('e-selected');\r\n      }\r\n      let checkbox: HTMLElement = closest(args.event.target as Element, '.e-checkbox-wrapper') as HTMLElement;\r\n      if (checkbox) {\r\n        let frame: HTMLElement = checkbox.querySelector('.e-frame');\r\n        if (checkbox && frame.classList.contains('e-check')) {\r\n          frame.classList.remove('e-check');\r\n        } else if (checkbox) {\r\n          frame.classList.add('e-check');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // ? Check/Uncheck of row contextmenu items\r\n  public rowBeforeClose(args: BeforeOpenCloseMenuEventArgs) {\r\n    if ((args.event.target as Element).closest('.e-menu-item')) {\r\n      let selectedElem: NodeList = args.element.querySelectorAll('.e-selected');\r\n      for (let i: number = 0; i < selectedElem.length; i++) {\r\n        let ele: Element = selectedElem[i] as Element;\r\n        ele.classList.remove('e-selected');\r\n      }\r\n      let checkbox: HTMLElement = closest(args.event.target as Element, '.e-checkbox-wrapper') as HTMLElement;\r\n      if (checkbox) {\r\n        let frame: HTMLElement = checkbox.querySelector('.e-frame');\r\n        if (checkbox && frame.classList.contains('e-check')) {\r\n          frame.classList.remove('e-check');\r\n        } else if (checkbox) {\r\n          frame.classList.add('e-check');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // ? Add checkbox to column contextmenu items\r\n  public colItemRender(args: MenuEventArgs) {\r\n    if (this.colCheckBoxMenus.includes(args.item.id)) {\r\n      let check: Element;\r\n      if (args.item.id === 'freeze') {\r\n        check = createCheckBox(createElement, false, {\r\n          label: args.item.text,\r\n          checked: this.frozenColumns > 0 ? true : false\r\n        });\r\n      } else {\r\n        check = createCheckBox(createElement, false, {\r\n          label: args.item.text,\r\n          checked: false\r\n        });\r\n      }\r\n      args.element.innerHTML = '';\r\n      args.element.appendChild(check);\r\n    }\r\n  }\r\n\r\n  // ? Add checkbox to row contextmenu items\r\n  public rowItemRender(args: MenuEventArgs) {\r\n    if (this.rowCheckBoxMenus.includes(args.item.id)) {\r\n      let check: Element = createCheckBox(createElement, false, {\r\n        label: args.item.text,\r\n        checked: this.selectionOptions.type == 'Multiple' ? true : false\r\n      });\r\n      args.element.innerHTML = '';\r\n      args.element.appendChild(check);\r\n    }\r\n  }\r\n\r\n  // ? On column context menu open\r\n  onColContextMenuBeforeOpen(event) {\r\n    let path: HTMLElement[] = event.event.path;\r\n    path.forEach((element) => {\r\n      if (element.classList && element.classList.contains('e-headercell')) {\r\n        const headerCell: HTMLElement = element.querySelector('span.e-headertext');\r\n        const columnName: string = headerCell.innerText;\r\n        this.selectedColumn = this.columns.find(col => col.headerText === columnName);\r\n      }\r\n    })\r\n    let menuItems: HTMLElement = event.element;\r\n    let multiSortItem = menuItems.querySelector('li#multiSort')\r\n    let filterItem = menuItems.querySelector('li#filter')\r\n    let multiSortCheckBox = multiSortItem.querySelector('.e-frame');\r\n    let filterCheckBox = filterItem.querySelector('.e-frame');\r\n    let index = this.sortSettings.columns.findIndex((col) => {\r\n      return col.field === this.selectedColumn.field;\r\n    });\r\n    if (this.treeGridObj.allowFiltering) {\r\n      filterCheckBox.classList.add('e-check');\r\n    } else {\r\n      filterCheckBox.classList.remove('e-check');\r\n    }\r\n    if (index > -1) {\r\n      multiSortCheckBox.classList.add('e-check');\r\n    } else {\r\n      multiSortCheckBox.classList.remove('e-check');\r\n    }\r\n  }\r\n\r\n  // ? On row context menu open\r\n  onRowContextMenuBeforeOpen(event) {\r\n    let path: HTMLElement[] = event.event.path;\r\n    path.forEach((element) => {\r\n      if (element.classList && element.classList.contains('e-row')) {\r\n        const cells: any = element.children;\r\n        const rowId: string = cells[0].innerText;\r\n        this.selectedRow = this.data.find(row => row.id === rowId);\r\n        this.selectedRowIndex = this.data.map(function (e) { return e.id }).indexOf(rowId);\r\n      }\r\n    })\r\n  }\r\n\r\n  // ? On column context menu item click\r\n  public colItemSelect(args: MenuEventArgs): void {\r\n    switch (args.item.id) {\r\n      case 'filter':\r\n        this.changeFilter();\r\n        break;\r\n      case 'freeze':\r\n        this.freezeColumns(args);\r\n        break;\r\n      case 'multiSort':\r\n        this.multiSort(args);\r\n        break;\r\n      case 'addCol':\r\n        this.addColumn(true);\r\n        break;\r\n      case 'editCol':\r\n        this.addColumn(false);\r\n        break;\r\n      case 'deleteCol':\r\n        this.deleteColumn();\r\n        break;\r\n      case 'choose':\r\n        this.openChooseColDialog();\r\n        break;\r\n    }\r\n  }\r\n\r\n  // ? On row context menu item click\r\n  public rowItemSelect(args: MenuEventArgs): void {\r\n    switch (args.item.id) {\r\n      case 'multiSelect':\r\n        this.changeRowSelectionOption();\r\n        break;\r\n      case 'addNextRow':\r\n        this.addNextRow(args);\r\n        break;\r\n      case 'copyRow':\r\n        this.copyRow(args);\r\n        break;\r\n      case 'cutRow':\r\n        this.cutRow(args);\r\n        break;\r\n      case 'pasteNext':\r\n        this.pasteMode = 'Next';\r\n        this.paste(args);\r\n        break;\r\n      case 'pasteChild':\r\n        this.pasteMode = 'Child';\r\n        this.paste(args);\r\n        break;\r\n      case 'deleteRow':\r\n        this.deleteRow(args);\r\n        break;\r\n    }\r\n  }\r\n\r\n  changeFilter() {\r\n    this.hideContextMenus();\r\n    this.treeGridObj.allowFiltering = !this.treeGridObj.allowFiltering;\r\n    this.refreshTreeGrid();\r\n  }\r\n\r\n  freezeColumns(args: MenuEventArgs) {\r\n    this.display = false;\r\n    this.hideContextMenus();\r\n    let checkboxEle = args.element.querySelector('span.e-frame.e-icons');\r\n    if (checkboxEle.classList.contains('e-check')) {\r\n      this.frozenColumns = 0;\r\n    } else {\r\n      const colIndex = this.columns.map(i => i.field).indexOf(this.selectedColumn.field);\r\n      this.frozenColumns = colIndex + 1;\r\n    }\r\n    this.hardRefreshTreeGrid();\r\n  }\r\n\r\n  multiSort(args: MenuEventArgs) {\r\n    this.hideContextMenus();\r\n    this.display = false;\r\n    let checkboxEle = args.element.querySelector('span.e-frame.e-icons');\r\n    if (checkboxEle.classList.contains('e-check')) {\r\n      this.treeGridObj.removeSortColumn(this.selectedColumn.field);\r\n      this.sortSettings.columns = this.sortSettings.columns.filter((col) => col.field != this.selectedColumn.field);\r\n    } else {\r\n      this.treeGridObj.sortByColumn(this.selectedColumn.field, 'Ascending', true);\r\n      this.sortSettings.columns.push({ direction: 'Ascending', field: this.selectedColumn.field });\r\n    }\r\n    this.hardRefreshTreeGrid();\r\n  }\r\n\r\n  addColumn(isAdd: boolean) {\r\n    this.hideContextMenus();\r\n    this.DialogAlert?.hide();\r\n    this.addUpdateLabel = isAdd ? \"Add New Column\" : \"Edit New Column\";\r\n    if (!isAdd) {\r\n      this.addColumnForm.patchValue({\r\n        colName: this.selectedColumn.headerText,\r\n        colValue: '',\r\n        colType: this.selectedColumn.type,\r\n        isColAdd: isAdd\r\n      });\r\n    }\r\n    else {\r\n      this.addColumnForm.reset();\r\n      this.addColumnForm.patchValue({\r\n        colType: 'string',\r\n        isColAdd: isAdd\r\n      });\r\n    }\r\n    this.ejDialog.show();\r\n  }\r\n\r\n\r\n  saveCol() {\r\n    const isAdd = this.addColumnForm.get('isColAdd').value;\r\n    const colName = this.addColumnForm.get('colName').value;\r\n    const noSpaceColName = colName.replace(/ /g, \"\");\r\n    const colType = this.addColumnForm.get('colType').value;\r\n    const colVal = this.addColumnForm.get('colValue').value;\r\n    const minWidth = this.addColumnForm.get('colMinWidth').value;\r\n    const fontSize = this.addColumnForm.get('colFontSize').value;\r\n    const fontColor = this.addColumnForm.get('colFontColor').value;\r\n    const bgColor = this.addColumnForm.get('colBgColor').value;\r\n    const alignMent = this.addColumnForm.get('colAlignment').value;\r\n    const textWrap = this.addColumnForm.get('colTextWrap').value;\r\n    var style = document.createElement('style');\r\n    style.innerHTML = `.${noSpaceColName}css { color: ${fontColor} !important; font-size: ${fontSize}px !important; background-color: ${bgColor} !important; min-width: ${minWidth}px !important; text-align: ${alignMent} !important; }`;\r\n    document.getElementsByTagName('head')[0].appendChild(style);\r\n\r\n    if (isAdd) {\r\n      if (!this.columns.some(x => x.field.toLowerCase() == noSpaceColName.toLowerCase())) {\r\n        let newCol = { field: noSpaceColName, headerText: colName, headerTextAlign: alignMent, type: colType, customAttributes: { class: `${noSpaceColName}css` } };\r\n        let colObj: Column = new Column(newCol);\r\n        this.columns.push(colObj);\r\n        console.log(\"🚀  ~ saveCol ~ this.columns\", this.columns)\r\n        this.data.forEach(x => {\r\n          x[noSpaceColName] = colVal;\r\n        });\r\n      }\r\n      else {\r\n        this.DialogAlert = DialogUtility.alert({\r\n          content: \"This column name is already exists. Please try again with different column name!\",\r\n          okButton: { text: 'OK', click: this.addColumn.bind(this, true) },\r\n          animationSettings: { effect: 'Zoom' }\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      let newCol = { field: this.selectedColumn.field, headerText: colName, headerTextAlign: alignMent, type: colType, customAttributes: { class: `${noSpaceColName}css` } };\r\n      this.columns[this.selectedColumn.index] = new Column(newCol);\r\n      if (!!colVal) {\r\n        this.data.forEach(x => {\r\n          if (x.hasOwnProperty(this.selectedColumn.field)) {\r\n            x[this.selectedColumn.field] = colVal;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    this.cancelCol();\r\n    this.addColumnForm.reset();\r\n  }\r\n\r\n  cancelCol() {\r\n    this.ejDialog.hide();\r\n    this.refreshTreeGrid();\r\n  }\r\n\r\n  deleteColumn() {\r\n    const index = this.treeGridObj.columns.findIndex(x => x.field == this.selectedColumn.field);\r\n    this.deleteMode = 'Column';\r\n    this.onOpenDialog(index);\r\n  }\r\n\r\n  onOpenDialog(index: any): void {\r\n    this.hideContextMenus();\r\n    let title: string = 'Delete Column';\r\n    let content: string = 'Are you sure you want to delete this column?';\r\n    if (this.deleteMode == 'Row') {\r\n      title = 'Delete Row';\r\n      content = 'Are you sure you want to delete this row?';\r\n    }\r\n    this.DialogObj = DialogUtility.confirm({\r\n      title: title,\r\n      content: content,\r\n      isModal: true,\r\n      okButton: { text: 'OK', click: this.okClick.bind(this, index) },\r\n      cancelButton: { text: 'Cancel', click: this.cancelClick.bind(this) },\r\n      animationSettings: { effect: 'Zoom' },\r\n      position: { X: 'center', Y: 'center' }\r\n    });\r\n  }\r\n\r\n  okClick(index: any): void {\r\n    if (this.deleteMode == 'Column') {\r\n      if (index > -1) {\r\n        this.treeGridObj.columns.splice(index, 1);\r\n        this.treeGridObj.refreshColumns();\r\n      }\r\n    }\r\n    if (this.deleteMode == 'Row') {\r\n      this.data.splice(this.selectedRowIndex, 1);\r\n      this.treeGridObj.refresh();\r\n    }\r\n    this.refreshTreeGrid();\r\n    this.cancelClick();\r\n  }\r\n\r\n  cancelClick(): void {\r\n    this.DialogObj.close();\r\n  }\r\n\r\n  openChooseColDialog() {\r\n    this.hideContextMenus();\r\n    this.chooseColumns = this.columns;\r\n    this.chooseColDialog.show();\r\n  }\r\n\r\n  chooseCol() {\r\n    this.hideContextMenus();\r\n    this.chooseColumns.forEach((col, index) => {\r\n      this.columns[index].visible = col.visible;\r\n    });\r\n    this.treeGridObj.refreshColumns();\r\n    this.cancelChooseCol();\r\n  }\r\n\r\n  changeChooseCol(event, column) {\r\n    this.chooseColumns.forEach(col => {\r\n      if (col.field == column.field) {\r\n        col.visible = event.target.checked;\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelChooseCol() {\r\n    this.chooseColumns = [];\r\n    this.chooseColDialog.hide();\r\n    this.refreshTreeGrid();\r\n  }\r\n\r\n  changeRowSelectionOption() {\r\n    this.display = false;\r\n    this.hideContextMenus();\r\n    this.selectionOptions.type = this.selectionOptions.type == 'Multiple' ? 'Single' : 'Multiple';\r\n    this.hardRefreshTreeGrid();\r\n  }\r\n\r\n  addNextRow(args: MenuEventArgs) {\r\n    console.log('🚀 ~ addNext ~ args', args);\r\n  }\r\n\r\n  copyRow(args: MenuEventArgs) {\r\n    this.selectedMode = 'Copy';\r\n    let selectedRows: any = this.treeGridObj.getSelectedRecords();\r\n    let selectedRowsIds: any = selectedRows.map(row => row.id);\r\n    this.selectedRows = selectedRowsIds.map(row => {\r\n      let index = this.data.map(function (e) { return e.id }).indexOf(row);\r\n      let newRow = { ...this.data[index] };\r\n      newRow.id = this.userService.getUniqueId(4);\r\n      return newRow;\r\n    });\r\n  }\r\n\r\n  cutRow(args: MenuEventArgs) {\r\n    this.selectedMode = 'Cut';\r\n    let selectedRows: any = this.treeGridObj.getSelectedRecords();\r\n    let selectedRowsIds: any = selectedRows.map(row => row.id);\r\n    this.selectedRows = selectedRowsIds.map(row => {\r\n      let index = this.data.map(function (e) { return e.id }).indexOf(row);\r\n      let newRow = { ...this.data[index] };\r\n      return newRow;\r\n    });\r\n  }\r\n\r\n  paste(args: MenuEventArgs) {\r\n    switch (this.pasteMode) {\r\n      case 'Child':\r\n        this.pasteChild();\r\n        break;\r\n      case 'Next':\r\n        this.pasteNext();\r\n        break;\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  pasteChild() {\r\n    if (this.selectedRows.length == 0) {\r\n      return;\r\n    }\r\n    this.hideContextMenus();\r\n    if (!this.data[this.selectedRowIndex].subUsers) {\r\n      this.data[this.selectedRowIndex].subUsers = [];\r\n    }\r\n    this.data[this.selectedRowIndex].subUsers.push(...this.selectedRows);\r\n    if (this.selectedMode == 'Cut') {\r\n      this.selectedRows.forEach(row => {\r\n        this.data = this.data.filter(item => item.id != row.id);\r\n      });\r\n    }\r\n    this.selectedRows = [];\r\n    this.refreshTreeGrid();\r\n  }\r\n\r\n  pasteNext() {\r\n    if (this.selectedRows.length == 0) {\r\n      return;\r\n    }\r\n    this.hideContextMenus();\r\n    let selectedRowsIndexes = [];\r\n    if (this.selectedMode == 'Cut') {\r\n      this.selectedRows.forEach(row => {\r\n        let index = this.data.findIndex(x => x.id == row.id);\r\n        selectedRowsIndexes.push(index);\r\n      });\r\n      selectedRowsIndexes.forEach(index => {\r\n        if (index < this.selectedRowIndex) {\r\n          this.selectedRowIndex--;\r\n        }\r\n      })\r\n      this.selectedRows.forEach((row, index) => {\r\n        this.data = this.data.filter(item => item.id != row.id);\r\n      });\r\n    }\r\n    this.data.splice(this.selectedRowIndex + 1, 0, ...this.selectedRows);\r\n    this.selectedRows = [];\r\n    this.refreshTreeGrid();\r\n  }\r\n\r\n  deleteRow(args: MenuEventArgs) {\r\n    this.deleteMode = 'Row';\r\n    this.onOpenDialog(null);\r\n  }\r\n\r\n  actionHandler(args: any) {\r\n    if (args.name === 'actionComplete' && args.requestType === 'sorting') {\r\n      this.display = false;\r\n      this.hideContextMenus();\r\n      let sortedColumns = this.treeGridObj.sortSettings.columns;\r\n      this.sortSettings.columns = [];\r\n      sortedColumns.forEach(col => {\r\n        this.sortSettings.columns.push({ field: col.field, direction: col.direction });\r\n      });\r\n      this.hardRefreshTreeGrid();\r\n    }\r\n  }\r\n\r\n  hideContextMenus() {\r\n    this.rowContextMenuDisplay = false;\r\n    this.colContextMenuDisplay = false;\r\n  }\r\n\r\n  refreshTreeGrid() {\r\n    this.treeGridObj.refreshColumns();\r\n    this.treeGridObj.refresh();\r\n    setTimeout(() => {\r\n      this.rowContextMenuDisplay = true;\r\n      this.colContextMenuDisplay = true;\r\n    }, 200);\r\n  }\r\n\r\n  hardRefreshTreeGrid() {\r\n    setTimeout(() => {\r\n      this.display = true;\r\n    }, 100);\r\n    setTimeout(() => {\r\n      this.rowContextMenuDisplay = true;\r\n      this.colContextMenuDisplay = true;\r\n    }, 200);\r\n  }\r\n}\r\n","<header class=\"header text-center\">\r\n  <h2>Syncfusion EJ2 Angular TreeGrid</h2>\r\n</header>\r\n\r\n<ejs-treegrid *ngIf=\"display\" #treegrid [dataSource]='data' height='100%' [treeColumnIndex]='1' childMapping='subUsers'\r\n  [columns]='columns' [selectionSettings]='selectionOptions' [allowResizing]='true' [allowFiltering]='allowFiltering'\r\n  [frozenColumns]='frozenColumns' [allowSorting]='true' [sortSettings]='sortSettings' [enableInfiniteScrolling]=true\r\n  (actionComplete)='actionHandler($event)'>\r\n</ejs-treegrid>\r\n\r\n<ejs-contextmenu *ngIf=\"display && colContextMenuDisplay\" id='colContextmenu' #colContextmenu [target]='colTarget'\r\n  [items]='colMenuItems' (beforeItemRender)='colItemRender($event)' (beforeClose)='colBeforeClose($event)'\r\n  (select)=\"colItemSelect($event)\" (beforeOpen)='onColContextMenuBeforeOpen($event)'>\r\n</ejs-contextmenu>\r\n\r\n<ejs-contextmenu *ngIf=\"rowContextMenuDisplay && display\" id='rowContextmenu' #rowContextmenu [target]='rowTarget'\r\n  [items]='rowMenuItems' (beforeItemRender)='rowItemRender($event)' (beforeClose)='rowBeforeClose($event)'\r\n  (select)=\"rowItemSelect($event)\" (beforeOpen)='onRowContextMenuBeforeOpen($event)'>\r\n</ejs-contextmenu>\r\n\r\n<ejs-dialog id='dialog' #ejDialog [header]='addUpdateLabel' [visible]='false'>\r\n  <ng-template #content>\r\n    <form [formGroup]=\"addColumnForm\" (ngSubmit)=\"saveCol()\">\r\n      <input type=\"hidden\" formControlName=\"isColAdd\" />\r\n      <div>\r\n        <div class=\"e-float-input e-control-wrapper\">\r\n          <input formControlName=\"colName\" type=\"text\">\r\n          <span class=\"e-float-line\"></span>\r\n          <label class=\"e-float-text e-label-top\" for=\"ColName\"> Column Name</label>\r\n        </div>\r\n        <span class=\"text-danger\"\r\n          *ngIf=\"addColumnForm?.get('colName')?.hasError('required') && addColumnForm?.get('colName')?.touched\"\r\n          class=\"text-danger\">\r\n          *Column name is required\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <div class=\"e-float-input e-control-wrapper\">\r\n          <ejs-dropdownlist formControlName=\"colType\" [dataSource]='colTypeSet' [fields]=\"fieldsvalues\"\r\n            placeholder=\"Select Column Type\" floatLabelType='Auto'></ejs-dropdownlist>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div\r\n          *ngIf=\"addColumnForm?.get('colType')?.value == 'string' || addColumnForm?.get('colType')?.value == 'number'\"\r\n          class=\"mt-10\">\r\n          <div class=\"e-float-input e-control-wrapper\">\r\n            <input formControlName=\"colValue\"\r\n              [attr.type]=\"addColumnForm?.get('colType')?.value == 'string' ?  'text':'number'\">\r\n            <span class=\"e-float-line\"></span>\r\n            <label class=\"e-float-text e-label-top\" for=\"ColValue\"> Enter {{addColumnForm?.get('colType')?.value ==\r\n              'string'\r\n              ? 'Text' : 'Number'}}</label>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"addColumnForm?.get('colType')?.value == 'Date'\" class=\"mt-10\">\r\n          <ejs-datepicker #ejDatePicker formControlName=\"colValue\" name=\"datepicker\" placeholder=\"Select Date\"\r\n            floatLabelType='Auto'></ejs-datepicker>\r\n        </div>\r\n        <div *ngIf=\"addColumnForm?.get('colType')?.value == 'boolean'\" class=\"mt-10\">\r\n          <ul formControlName=\"colValue\">\r\n            <li>\r\n              <ejs-radiobutton label=\"True\" name=\"bool\" type=\"checkbox\"></ejs-radiobutton>\r\n            </li>\r\n            <li class=\"mt-10\">\r\n              <ejs-radiobutton label=\"False\" type=\"checkbox\" name=\"bool\"></ejs-radiobutton>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div *ngIf=\"addColumnForm?.get('colType')?.value == 'object'\" class=\"mt-10\">\r\n          <ejs-dropdownlist formControlName=\"colValue\" [dataSource]='dropDownSet' placeholder=\"Select Default Value\"\r\n            floatLabelType='Auto' showClearButton='true'></ejs-dropdownlist>\r\n        </div>\r\n        <span class=\"text-danger\"\r\n          *ngIf=\"addColumnForm?.get('colValue')?.hasError('required') && addColumnForm?.get('colValue')?.touched\"\r\n          class=\"text-danger\">\r\n          *Column default value is required\r\n        </span>\r\n      </div>\r\n      <div class=\"mt-10\">\r\n        <div class=\"custom-card mt-15\">\r\n          <p class=\"pb-1 h6 border-bottom\">Column Configurations</p>\r\n\r\n          <div class=\"pl-2\">\r\n            <div class=\"form-row\">\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12 e-float-input e-control-wrapper\">\r\n                <input type=\"number\" formControlName=\"colMinWidth\" />\r\n                <span class=\"e-float-line\"></span>\r\n                <label class=\"e-float-text e-label-top\" for=\"ColMinWidth\"> Minimum Column Width</label>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12 e-float-input e-control-wrapper\">\r\n                <input type=\"number\" formControlName=\"colFontSize\" />\r\n                <span class=\"e-float-line\"></span>\r\n                <label class=\"e-float-text e-label-top\" for=\"ColFontSize\"> Font Size</label>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12\">\r\n                <ejs-dropdownlist formControlName=\"colAlignment\" [dataSource]='alignmentSet'\r\n                  placeholder=\"Select Alignment\" floatLabelType='Auto' showClearButton='true'></ejs-dropdownlist>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12 mt-3\">\r\n                <ejs-checkbox label=\"Text Wrap\"></ejs-checkbox>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12 mt-3\">\r\n                <input type=\"color\" formControlName=\"colFontColor\" />\r\n                <label class=\"ml-1\" for=\"ColFontColor\"> Font Color</label>\r\n              </div>\r\n              <div class=\"col-lg-4 col-md-6 col-sm-12 mt-3\">\r\n                <input type=\"color\" formControlName=\"colBgColor\" />\r\n                <label class=\"ml-1\" for=\"ColFontColor\"> Background Color</label>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-15\">\r\n        <button type=\"submit\" ejs-button cssClass=\"e-info\" [disabled]='addColumnForm.invalid'>Save</button>\r\n        <button type=\"button\" ejs-button cssClass=\"e-danger\" (click)=\"cancelCol()\" class=\"ml-2\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </ng-template>\r\n</ejs-dialog>\r\n\r\n<ejs-dialog id='dialog2' #chooseColDialog header='Choose Column' [visible]='false'>\r\n  <ng-template #content>\r\n    <form (ngSubmit)=\"chooseCol()\">\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-md-3\" *ngFor=\"let col of columns\">\r\n          <div class=\"e-float-input e-control-wrapper\">\r\n            <input type=\"checkbox\" [id]=\"col.field\" [checked]=\"col.visible == true\"\r\n              (change)=\"changeChooseCol($event, col)\">\r\n            <label class=\"e-float-text e-label-top\" [for]=\"col.field\">{{ col.headerText }}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"margin-top\">\r\n        <button type=\"submit\" ejs-button cssClass=\"e-info\">Save</button>\r\n        <button type=\"button\" ejs-button cssClass=\"e-danger\" (click)=\"cancelChooseCol()\"\r\n          class=\"margin-left\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </ng-template>\r\n</ejs-dialog>","export class AppConst {\r\n    public static colMenuItems = [\r\n        { text: 'Add Column', id: 'addCol' },\r\n        { text: 'Edit Column', id: 'editCol' },\r\n        { text: 'Delete Column', id: 'deleteCol' },\r\n        { text: 'Choose', id: 'choose' },\r\n        { text: 'Freeze', id: 'freeze' },\r\n        { text: 'Filter', id: 'filter' },\r\n        { text: 'Multi Sort', id: 'multiSort' },\r\n    ];\r\n\r\n    public static rowMenuItems = [\r\n        { text: 'Add Next', id: 'addNextRow' },\r\n        { text: 'Add Child', id: 'addChildRow' },\r\n        { text: 'Delete Row', id: 'deleteRow' },\r\n        { text: 'Edit Row', id: 'editRow' },\r\n        { text: 'Copy Row', id: 'copyRow' },\r\n        { text: 'Cut Row', id: 'cutRow' },\r\n        { text: 'Paste Next', id: 'pasteNext' },\r\n        { text: 'Paste Child', id: 'pasteChild' },\r\n        { text: 'Multi Select', id: 'multiSelect' },\r\n    ];\r\n\r\n    public static colCheckBoxMenus = ['freeze', 'filter', 'multiSort'];\r\n\r\n    public static rowCheckBoxMenus = ['multiSelect'];\r\n\r\n    public static colTypeSet: { [key: string]: Object }[] = [\r\n        { value: 'string', text: 'Text' },\r\n        { value: 'number', text: 'Num' },\r\n        { value: 'Date', text: 'Date' },\r\n        { value: 'boolean', text: 'Boolean' },\r\n        { value: 'object', text: 'DropDownList' },\r\n    ];\r\n\r\n    public static dropDownSet: string[] = ['Default-1', 'Default-2', 'Default-3', 'Default-4', 'Default-5'];\r\n    public static alignmentSet: string[] = ['Left', 'Center', 'Right', 'Justify'];\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n// import { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { TreeGridModule } from '@syncfusion/ej2-angular-treegrid';\r\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { PageService, FilterService, EditService, ToolbarService, FreezeService } from '@syncfusion/ej2-angular-treegrid';\r\nimport { SortService, ResizeService, ExcelExportService, PdfExportService, ContextMenuService, InfiniteScrollService } from '@syncfusion/ej2-angular-treegrid';\r\nimport { DialogModule } from '@syncfusion/ej2-angular-popups';\r\nimport { ContextMenuModule } from '@syncfusion/ej2-angular-navigations';\r\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\r\nimport { enableRipple } from '@syncfusion/ej2-base';\r\nimport { UserService } from './services/user.service';\r\nimport { DatePickerModule } from '@syncfusion/ej2-angular-calendars';\r\nimport { RadioButtonModule, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    // HttpModule,\r\n    HttpClientModule,\r\n    TreeGridModule,\r\n    DropDownListAllModule,\r\n    DialogModule,\r\n    ContextMenuModule,\r\n    ButtonModule,\r\n    DatePickerModule,\r\n    RadioButtonModule,\r\n    CheckBoxModule,\r\n    NgbModule\r\n  ],\r\n  providers: [PageService,\r\n    SortService,\r\n    FilterService,\r\n    EditService,\r\n    SortService, ResizeService,\r\n    ExcelExportService,\r\n    PdfExportService, ContextMenuService,\r\n    ToolbarService,\r\n    FreezeService,\r\n    InfiniteScrollService],\r\n  bootstrap: [AppComponent, UserService]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  public url = environment.API_URL;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsers(): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        'Content-Type': 'application/json',\r\n        \"Access-Control-Allow-Credentials\": \"true\",\r\n      })\r\n    };\r\n    const url = `${this.url}/users`;\r\n    return this.http.get(url, httpOptions)\r\n  }\r\n\r\n  public getUniqueId(parts: number): string {\r\n    const stringArr = [];\r\n    for (let i = 0; i < parts; i++) {\r\n      const uniqueId = (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n      stringArr.push(uniqueId);\r\n    }\r\n    return stringArr.join('-');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API_URL: \"https://treegrid-node-api.herokuapp.com\",\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}